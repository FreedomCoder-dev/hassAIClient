#!/bin/sh

#
# Copyright 2015 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
##
##  Gradle start up script for POSIX generated by Gradle.
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
APP_PATH=$0

# Need this for daisy-chained symlinks.
while [ -h "$APP_PATH" ] ; do
  ls=`ls -ld "$APP_PATH"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    APP_PATH=$link
  else
    APP_PATH=`dirname "$APP_PATH"`"/$link"
  fi
done

APP_HOME=`dirname "$APP_PATH"`

# This is normally unused
APP_BASE_NAME=`basename "$0"`

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS="-Xmx64m -Xms64m"

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
  echo "$*"
}

die () {
  echo
  echo "$*"
  echo
  exit 1
}

# OS specific support functions.
# Unset irrelevant variables.
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MSYS* | MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
  * )
    ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
for library in \
  gradle-base-annotations-8.7.jar \
  gradle-cli-8.7.jar \
  gradle-files-8.7.jar \
  gradle-functional-8.7.jar \
  gradle-wrapper-shared-8.7.jar
do
  if [ -f "$APP_HOME/gradle/wrapper/$library" ]; then
    CLASSPATH="$CLASSPATH:$APP_HOME/gradle/wrapper/$library"
  fi
done

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
  if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
    # IBM's JDK on AIX uses strange locations for the executables
    JAVACMD="$JAVA_HOME/jre/sh/java"
  else
    JAVACMD="$JAVA_HOME/bin/java"
  fi
  if [ ! -x "$JAVACMD" ] ; then
    die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
  fi
else
  JAVACMD="java"
  which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "true" -o "$darwin" = "true" -o "$msys" = "true" ] ; then
  ulimit -n 8192 >/dev/null 2>&1
else
  if [ "$nonstop" != "true" ]; then
    ulimit -n "$MAX_FD" >/dev/null 2>&1
  fi
fi

# Collect all arguments for the java command, following the shell quoting and substitution rules
JVM_OPTS=""
for arg in "$@" ; do
  JVM_OPTS="$JVM_OPTS \"$arg\""
done

exec "$JAVACMD" $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
